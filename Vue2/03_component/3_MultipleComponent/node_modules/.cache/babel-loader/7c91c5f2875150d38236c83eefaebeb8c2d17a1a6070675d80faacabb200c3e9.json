{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-7ba5bd90\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  id: \"app\",\n  class: \"app\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"hello~\", -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_School = _resolveComponent(\"School\");\n  const _component_Student = _resolveComponent(\"Student\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createCommentVNode(\"方法1：props实现：子传父\"), _createVNode(_component_School, {\n    getSchoolName: $options.getSchoolName\n  }, null, 8 /* PROPS */, [\"getSchoolName\"]), _createCommentVNode(\"方法2：自定义事件实现：子传父\"), _createCommentVNode(\"此处get并没有传给Student，只是绑定事件，\"), _createCommentVNode(\"Vue3弃用了$on\"), _createCommentVNode(\"<Student v-on:myEvent=\\\"getStudentName\\\"></Student>\"), _createCommentVNode(\"<Student @myEvent=\\\"getStudentName\\\"></Student>\"), _createVNode(_component_Student, {\n    onMyEvent: $options.getStudentName\n  }, null, 8 /* PROPS */, [\"onMyEvent\"]), _createCommentVNode(\"方法3：refs，比较灵活，如等待3s后处理\"), _createCommentVNode(\"<Student ref=\\\"Student\\\"></Student>\")]);\n}","map":{"version":3,"mappings":";;;EACOA,EAAE,EAAC,KAAK;EAACC,KAAK,EAAC;;gEAClBC,oBAAe,YAAX,QAAM;;;;;uBADZC,oBAeM,OAfNC,UAeM,GAdJC,UAAe,EACfC,sCAAsB,EACtBC,aAAgDC;IAAvCC,aAAa,EAAEC;EAAa,4CAErCJ,sCAAsB,EACtBA,gDAAgC,EAChCA,iCAAiB,EACjBA,0EAAwD,EACxDA,sEAAoD,EACpDC,aAAiDI;IAAnCC,SAAO,EAAEF;EAAc,wCAGrCJ,6CAA6B,EAC7BA,0DAAwC","names":["id","class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_createCommentVNode","_createVNode","_component_School","getSchoolName","$options","_component_Student","onMyEvent"],"sourceRoot":"","sources":["/Users/chenyunfeng/Github_Pj/2022StudyNotes/Vue2/03_component/3_MultipleComponent/src/App.vue"],"sourcesContent":["<template>\n  <div id='app' class=\"app\">\n    <h1>hello~</h1>\n    <!--方法1：props实现：子传父-->\n    <School :getSchoolName=\"getSchoolName\"></School>\n\n    <!--方法2：自定义事件实现：子传父-->\n    <!--此处get并没有传给Student，只是绑定事件，-->\n    <!--Vue3弃用了$on-->\n    <!--<Student v-on:myEvent=\"getStudentName\"></Student>-->\n    <!--<Student @myEvent=\"getStudentName\"></Student>-->\n    <Student v-on:myEvent=\"getStudentName\"></Student>\n\n\n    <!--方法3：refs，比较灵活，如等待3s后处理-->\n    <!--<Student ref=\"Student\"></Student>-->\n  </div>\n</template>\n\n<script>\n  import Student from \"@/components/Student\";\n  import School from \"@/components/School\";\n  export default {\n    name: \"App\",\n    components:{\n      Student,School\n    },\n    methods:{\n      // 两个方法都需要配置回调函数\n      getSchoolName(name){\n        console.log('App get school name:',name)\n      },\n      getStudentName(name){\n        console.log('App get Student name:',name,...args)\n      }\n    },\n    setup(){\n      $emitter.on('myEvent')\n    },\n    mounted(){\n      // 绑定自定义事件\n      // this.$refs.Student.$on('myEvent',this.getStudentName)\n      // this.$refs.Student.$once('myEvent',this.getStudentName)\n      // 不能直接取，因为mounted只挂载一次，无法绑定到按钮事件上\n      // console.log('Student name is:',this.$refs.Student.name)\n      // TODO\n      // console.log($emitter,'emitter')\n      // $emitter.on('myEvent')\n\n    }\n  }\n</script>\n\n<!--scoped一般不用于App，因为App中的style一般用于全局-->\n<style scoped>\n  .app{\n    background-color: gray;\n  }\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}