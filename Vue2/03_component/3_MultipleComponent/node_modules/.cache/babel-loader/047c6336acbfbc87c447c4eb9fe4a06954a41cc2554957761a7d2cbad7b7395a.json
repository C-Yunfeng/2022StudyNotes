{"ast":null,"code":"import Student from './components/Student';\nimport School from './components/School';\nexport default {\n  name: 'App',\n  components: {\n    School,\n    Student\n  },\n  data() {\n    return {\n      msg: '你好啊！',\n      studentName: ''\n    };\n  },\n  methods: {\n    getSchoolName(name) {\n      console.log('App收到了学校名：', name);\n    },\n    getStudentName(name, ...params) {\n      console.log('App收到了学生名：', name, params);\n      this.studentName = name;\n    },\n    m1() {\n      console.log('demo事件被触发了！');\n    },\n    show() {\n      alert(123);\n    }\n  },\n  mounted() {\n    this.$refs.student.$on('atguigu', this.getStudentName); //绑定自定义事件\n    // this.$refs.student.$once('atguigu',this.getStudentName) //绑定自定义事件（一次性）\n  }\n};","map":{"version":3,"mappings":"AAgBA,OAAOA,OAAM,MAAO,sBAAqB;AACzC,OAAOC,MAAK,MAAO,qBAAoB;AAEvC,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,UAAU,EAAE;IAACF,MAAM;IAAED;EAAO,CAAC;EAC7BI,IAAI,GAAG;IACL,OAAO;MACLC,GAAG,EAAE,MAAM;MACXC,WAAW,EAAE;IACf;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,aAAa,CAACN,IAAI,EAAE;MAClBO,OAAO,CAACC,GAAG,CAAC,YAAY,EAAER,IAAI;IAChC,CAAC;IACDS,cAAc,CAACT,IAAI,EAAE,GAAGU,MAAM,EAAE;MAC9BH,OAAO,CAACC,GAAG,CAAC,YAAY,EAAER,IAAI,EAAEU,MAAM;MACtC,IAAI,CAACN,WAAU,GAAIJ,IAAG;IACxB,CAAC;IACDW,EAAE,GAAG;MACHJ,OAAO,CAACC,GAAG,CAAC,aAAa;IAC3B,CAAC;IACDI,IAAI,GAAG;MACLC,KAAK,CAAC,GAAG;IACX;EACF,CAAC;EACDC,OAAO,GAAG;IACR,IAAI,CAACC,KAAK,CAACC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,IAAI,CAACR,cAAc,GAAE;IACvD;EACF;AACF","names":["Student","School","name","components","data","msg","studentName","methods","getSchoolName","console","log","getStudentName","params","m1","show","alert","mounted","$refs","student","$on"],"sourceRoot":"","sources":["/Users/chenyunfeng/Github_Pj/2022StudyNotes/Vue2/03_component/3_MultipleComponent/src/App.vue"],"sourcesContent":["<template>\n  <div className=\"app\">\n    <h1>{{ msg }}，学生姓名是:{{ studentName }}</h1>\n\n    <!-- 通过父组件给子组件传递函数类型的props实现：子给父传递数据 -->\n    <School :getSchoolName=\"getSchoolName\"/>\n\n    <!-- 通过父组件给子组件绑定一个自定义事件实现：子给父传递数据（第一种写法，使用@或v-on） -->\n    <!-- <Student @atguigu=\"getStudentName\" @demo=\"m1\"/> -->\n\n    <!-- 通过父组件给子组件绑定一个自定义事件实现：子给父传递数据（第二种写法，使用ref） -->\n    <Student ref=\"student\" @click.native=\"show\"/>\n  </div>\n</template>\n\n<script>\nimport Student from './components/Student'\nimport School from './components/School'\n\nexport default {\n  name: 'App',\n  components: {School, Student},\n  data() {\n    return {\n      msg: '你好啊！',\n      studentName: ''\n    }\n  },\n  methods: {\n    getSchoolName(name) {\n      console.log('App收到了学校名：', name)\n    },\n    getStudentName(name, ...params) {\n      console.log('App收到了学生名：', name, params)\n      this.studentName = name\n    },\n    m1() {\n      console.log('demo事件被触发了！')\n    },\n    show() {\n      alert(123)\n    }\n  },\n  mounted() {\n    this.$refs.student.$on('atguigu', this.getStudentName) //绑定自定义事件\n    // this.$refs.student.$once('atguigu',this.getStudentName) //绑定自定义事件（一次性）\n  },\n}\n</script>\n\n<style scoped>\n.app {\n  background-color: gray;\n  padding: 5px;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}