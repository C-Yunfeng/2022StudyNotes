{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-7ba5bd90\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"app\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"hello~\", -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_School = _resolveComponent(\"School\");\n  const _component_Student = _resolveComponent(\"Student\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createCommentVNode(\"方法1：props实现：子传父\"), _createVNode(_component_School, {\n    getSchoolName: $options.getSchoolName\n  }, null, 8 /* PROPS */, [\"getSchoolName\"]), _createCommentVNode(\"方法2：自定义事件实现：子传父\"), _createCommentVNode(\"此处get并没有传给Student，只是绑定事件，\"), _createCommentVNode(\"<Student v-on:chenyunfeng=\\\"getStudentName\\\"></Student>\"), _createCommentVNode(\"<Student @chenyunfeng=\\\"getStudentName\\\"></Student>\"), _createCommentVNode(\"方法3：refs\"), _createVNode(_component_Student, {\n    ref: \"Student\"\n  }, null, 512 /* NEED_PATCH */)]);\n}","map":{"version":3,"mappings":";;;EACOA,KAAK,EAAC;AAAK;gEACdC,oBAAe,YAAX,QAAM;;;;;uBADZC,oBAYM,OAZNC,UAYM,GAXJC,UAAe,EACfC,sCAAsB,EACtBC,aAAgDC;IAAvCC,aAAa,EAAEC;EAAa,4CAErCJ,sCAAsB,EACtBA,gDAAgC,EAChCA,8EAA4D,EAC5DA,0EAAwD,EAExDA,+BAAe,EACfC,aAAiCI;IAAxBC,GAAG,EAAC;EAAS","names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_createCommentVNode","_createVNode","_component_School","getSchoolName","$options","_component_Student","ref"],"sourceRoot":"","sources":["/Users/chenyunfeng/Github_Pj/2022StudyNotes/Vue2/03_component/3_MultipleComponent/src/App.vue"],"sourcesContent":["<template>\n  <div class=\"app\">\n    <h1>hello~</h1>\n    <!--方法1：props实现：子传父-->\n    <School :getSchoolName=\"getSchoolName\"></School>\n\n    <!--方法2：自定义事件实现：子传父-->\n    <!--此处get并没有传给Student，只是绑定事件，-->\n    <!--<Student v-on:chenyunfeng=\"getStudentName\"></Student>-->\n    <!--<Student @chenyunfeng=\"getStudentName\"></Student>-->\n\n    <!--方法3：refs-->\n    <Student ref=\"Student\"></Student>\n  </div>\n</template>\n\n<script>\n  import Student from \"@/components/Student\";\n  import School from \"@/components/School\";\n  export default {\n    name: \"App\",\n    components:{\n      Student,School\n    },\n    methods:{\n      // 两个方法都需要配置回调函数\n      getSchoolName(name){\n        console.log('App get school name:',name)\n      },\n      getStudentName(name){\n        console.log('App get Student name:',name)\n      }\n    },\n    mounted(){\n      // this.$refs.Student.$on('chenyunfeng',this.getStudentName)\n      // this.$refs.Student.$once('chenyunfeng',this.getStudentName)\n      console.log('Student name is:',this.$refs.Student.name)\n    }\n  }\n</script>\n\n<!--scoped一般不用于App，因为App中的style一般用于全局-->\n<style scoped>\n  .app{\n    background-color: gray;\n  }\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}